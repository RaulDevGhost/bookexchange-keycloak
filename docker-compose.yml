version: '3'

services:
  postgres:
    image: postgres:16
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password # Change this in production
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -d keycloak -U keycloak"
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - keycloak-network

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.2
    container_name: keycloak
    command: ["start-dev"] # Use 'start' instead of 'start-dev' for production
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password # Change this in production
      KEYCLOAK_ADMIN: admin # Initial admin username
      KEYCLOAK_ADMIN_PASSWORD: admin # Change this in production
      # Uncomment the following for HTTPS configuration
      # KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/conf/server.crt.pem
      # KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/conf/server.key.pem
    ports:
      - '8080:8080' # HTTP
      - '8443:8443' # HTTPS
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./themes:/opt/keycloak/themes
      # Uncomment if you have certificates for HTTPS
      # - ./certs:/opt/keycloak/conf
    networks:
      - keycloak-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '5050:80'
    networks:
      - keycloak-network

volumes:
  postgres_data:
  keycloak_data:

networks:
  keycloak-network:
    driver: bridge